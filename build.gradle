plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.suhoi'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	postgresVersion = '42.7.3'
	preLiquibaseVersion = '1.5.0'
	mapstructVersion = '1.5.5.Final'
	mapstructLombokVersion = '0.2.0'
	jsonNullableVersion = '0.2.6'
	springVersion = '6.1.4'
	postgresContainerVersion = '1.19.8'
}

dependencies {
	implementation "org.springframework:spring-aspects:${springVersion}"
	implementation "org.springframework:spring-aop:${springVersion}"

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapstructLombokVersion}"
	implementation "org.openapitools:jackson-databind-nullable:${jsonNullableVersion}"

	implementation "net.lbruun.springboot:preliquibase-spring-boot-starter:${preLiquibaseVersion}"
	implementation "org.postgresql:postgresql:${postgresVersion}"

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation "org.testcontainers:postgresql:${postgresContainerVersion}"
	runtimeOnly 'com.h2database:h2'

}

tasks.named('test') {
	useJUnitPlatform()
}
